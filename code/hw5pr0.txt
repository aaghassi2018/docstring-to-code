1. Which contributing factor within the bug's origins (there are many!) strikes you as the "most preventable" and why? Of course, this will be in hindsightâ€¦.

2. The investigative report that uncovered the bug stated that software "does not fail in the same sense as a mechanical system." Do you agree or disagree with this statement? Explain briefly.

	Well, the article states that "Ordinarily, though, when a program converts data from one form to another, the conversions are protected by extra lines of code that watch for errors and recover gracefully." It seems as though if this kind of protection in case of an error was put into place, there would be a good chance of this error being caught and fixed mid-flight. Not having this protection seems quite risky and makes the code more susceptible to failure. I would argue that the failure in software does not fail in the same sense as a mechanical system. When there is a mechanical system failure, usually it is not the case that you can have another mechanical system fix the failure on the spot. In coding, however, you can. By doing putting something in the program that tells the computer what to do in case of failure, you can try to prevent catastrophes like the one that happened with Ariane 5. This seems hard/close to impossible with sophisticated mechanical systems.